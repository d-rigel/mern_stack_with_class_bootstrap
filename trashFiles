 "client": "npm start --prefix client// cd client && npm start "

  state = {
          items: [
              {id: uuid(), name: "Milk"},
              {id: uuid(), name: "Bread"},
              {id: uuid(), name: "Wheat"},
              {id: uuid(), name: "Candy"}
          ]
      }

      //   const { items } = this.state;


      <Button
                 color="dark"
                 style={{marginBottom: "2rem"}}
                    // onClick={() => {
                        
                    //     const name = prompt("Enter Item");
                    //     if(name) {
                    //         this.setState((state) => ({
                    //             items: [...state.items, {id: uuid(), name}]
                    //         }));
                    //     }
                    //     console.log(items)
                    // }}
                 >
                     Add Item
                 </Button>

         {id: uuid(), name: "Milk"},
        {id: uuid(), name: "Bread"},
        {id: uuid(), name: "Wheat"},
        {id: uuid(), name: "Water"}

     export const getItems = () => {
    return {
        type: GET_ITEMS
    };
};

export const addItem = item => {
    return {
        type: ADD_ITEM,
        payload: item
    };
};

export const deleteItem = id => {
    return {
        type: DELETE_ITEM,
        payload: id
    };
};


 <TransitionGroup className="shopping-list">
                         {items.map(({ id, name }) => (
                             <CSSTransition key={id} timeout={500} classNames="fade"> 
                                 <ListGroupItem>
                                     <Button
                                     className="remove-btn"
                                     color="danger"
                                     size="sm"
                                     onClick={this.onDeleteClick.bind(this, id)}
                                     >&times;</Button>
                                     {name}
                                 </ListGroupItem>
                             </CSSTransition>
                         ))}
                     </TransitionGroup>

                     process.env.MONGO_URI

//auth.js
//Create salt & hash
        bcrypt.genSalt(10, (err, salt) => {
            bcrypt.hash(newUser.password, salt, (err, hash) => {
                if(err) throw err;
                newUser.password = hash;
                newUser.save()
                .then(user => {

                    jwt.sign(
                        { id: user.id },
                        config.get("jwtSecret"),
                        { expiresIn: 3600 },
                        (err, token) => {
                            if (err) throw err
                            res.json({
                                token,
                                user: {
                                    id: user.id,
                                    name: user.name,
                                    email: user.email
                                }
                            })
                        }
                    )
                    
                })
            })
        })

         const newItem = {
      name: this.state.name,
    };

    //Add Item via addItem action
    this.props.addItem(newItem);

    <Button
          color="dark"
          style={{ marginBottom: "2rem" }}
          onClick={this.toggle}>
          Add Item
        </Button>

        <NavItem>
          <Logout />
        </NavItem>

        <NavItem>
          <RegisterModal />
        </NavItem>
        <NavItem>
          <LoginModal />
        </NavItem>